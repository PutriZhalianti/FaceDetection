# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16wbDebjRNtHpEreT4HybQMwYWMziJlrS
"""
import streamlit as st
import numpy as np
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing.image import img_to_array
from PIL import Image

# Load model
model = load_model("face_emotion_vgg16.h5")
emotion_labels = ['Angry', 'Disgust', 'Fear', 'Happy', 'Neutral', 'Sad', 'Surprise']

# Info input shape
model_input_shape = model.input_shape
st.write("Model input shape:", model_input_shape)
expected_channels = model_input_shape[-1]

# Fungsi preprocessing
def preprocess_image(image):
    if expected_channels == 1:
        image = image.convert('L')
    else:
        image = image.convert('RGB')
    image = image.resize((model_input_shape[1], model_input_shape[2]))
    img_array = img_to_array(image)
    img_array = np.expand_dims(img_array, axis=0)
    img_array = img_array / 255.0
    return img_array

# UI Streamlit
st.title("üé≠ Deteksi Emosi Wajah")
uploaded_file = st.file_uploader("Upload Gambar Wajah (.jpg/.png)", type=["jpg", "png", "jpeg"])

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption="Gambar yang Diupload", use_container_width=True)

    # Preprocessing
    processed = preprocess_image(image)
    st.write("Shape gambar setelah preprocessing:", processed.shape)

    try:
        prediction = model.predict(processed)
        emotion = emotion_labels[np.argmax(prediction)]
        st.success(f"Prediksi Emosi: {emotion}")
    except Exception as e:
        st.error("‚ùå Terjadi kesalahan saat memproses gambar.")
        st.exception(e)
